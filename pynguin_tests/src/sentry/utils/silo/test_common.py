# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import common as module_0


def test_case_0():
    str_0 = "=#"
    list_0 = [str_0, str_0]
    none_type_0 = module_0.apply_decorators(str_0, str_0, list_0, str_0)


def test_case_1():
    str_0 = ""
    none_type_0 = module_0.apply_decorators(str_0, str_0, str_0, str_0)


def test_case_2():
    list_0 = []
    keywords_0 = module_0.Keywords(list_0)
    str_0 = 'u`\t"\x0b^Wkg"R#eqfM=jcj'
    bool_0 = keywords_0.check(str_0)
    assert bool_0 is False


def test_case_3():
    pass


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x16\x9c\xe8\xf9"
    module_0.has_region_name(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'u`\t"\x0b^Wkg"R#eqZM=jcj'
    set_0 = set()
    keywords_0 = module_0.Keywords(str_0, set_0)
    none_type_0 = None
    keywords_0.check(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    bytes_0 = b"\xe8+"
    keywords_0 = module_0.Keywords(list_0, bytes_0)
    keywords_0.check(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    list_0 = []
    str_0 = "*&iNQ%"
    keywords_0 = module_0.Keywords(str_0)
    var_0 = keywords_0.__repr__()
    bool_0 = keywords_0.check(str_0)
    assert bool_0 is True
    str_1 = ",N4?jq98O^[Yob'~;\x0b\\1"
    str_2 = "chf(NdqiwfW+"
    module_0.apply_decorators(str_1, list_0, str_1, str_2)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "/"
    dict_0 = {}
    module_0.apply_decorators(str_0, str_0, dict_0, str_0)
